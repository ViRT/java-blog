<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/security
                           http://www.springframework.org/schema/security/spring-security-4.0.xsd">

    <security:global-method-security secured-annotations="enabled" />

    <security:http auto-config="true">
        <!-- Restrict URLs based on role -->
        <security:intercept-url pattern="/login*" access="isAnonymous()" />

        <security:intercept-url pattern="/css/main.css" access="isAnonymous()" />
        <security:intercept-url pattern="/resources/**" access="isAnonymous()" />

        <security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />

        <!-- Override default login and logout pages -->
        <security:form-login login-page="/login"
                             login-processing-url="/loginProcess"
                             default-target-url="/post"
                             authentication-failure-url="/login?error" />
        <security:logout logout-url="/logout"
                         logout-success-url="/post" />
    </security:http>

    <security:authentication-manager>
        <security:authentication-provider >
            <security:password-encoder ref="encoder" />
            <security:jdbc-user-service
                    data-source-ref="dataSource"
                    users-by-username-query="select username,password,enabled from User where username=?"
                    authorities-by-username-query="select u.username,r.role from User u, Role r where u.id = r.user_id and u.username =?" />
        </security:authentication-provider>
    </security:authentication-manager>

    <bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
</beans>
